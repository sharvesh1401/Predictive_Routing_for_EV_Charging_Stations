version: '3.8'

services:
  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend:8000
      - REACT_APP_MAPBOX_TOKEN=your_mapbox_token_here
      - REACT_APP_DEEPSEEK_API_KEY=your_deepseek_api_key_here
      - REACT_APP_GROQ_API_KEY=your_groq_api_key_here
    depends_on:
      - backend
    networks:
      - ev-routing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Backend API (if you have one)
  backend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
    volumes:
      - ./backend:/app
    command: npm start
    networks:
      - ev-routing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Development service (optional)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - ev-routing-network
    profiles:
      - dev

networks:
  ev-routing-network:
    driver: bridge

volumes:
  node_modules: